Design:

-  pass a connection and table/view == DBMetadataProcessor.load(conn, tabelname)
	-  get metadata for table/view
	-  create column objects (DBColumn) for each column
	
	-  create key objects    for any defined key (primary, unique or non-unique) for indexing and queryable


-  create ObjectFactory
	-  pass in metadata processor
	
	
-  convert Table/Column to Entity / Attribute


-  if not indexed, then is not searchable


-  indicate type of annotations to use (for library mode or protobuf)
 a.  Hibernate (library mode)
 b.  Protobuf (remote cache)



 

 
 -  end goal - Creat a Java class with appropriate annotations, and then jar them up.